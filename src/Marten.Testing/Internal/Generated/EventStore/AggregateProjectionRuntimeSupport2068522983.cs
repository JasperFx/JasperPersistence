// <auto-generated/>
#pragma warning disable
using Marten;
using Marten.Events.Aggregation;
using Marten.Internal.Storage;
using Marten.Storage;
using System;
using System.Linq;

namespace Marten.Generated.EventStore
{
    // START: AggregateProjectionLiveAggregation2068522983
    public class AggregateProjectionLiveAggregation2068522983 : Marten.Events.Aggregation.AsyncLiveAggregatorBase<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate>
    {
        private readonly Marten.Events.Aggregation.AggregateProjection<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate> _aggregateProjection;

        public AggregateProjectionLiveAggregation2068522983(Marten.Events.Aggregation.AggregateProjection<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate> aggregateProjection)
        {
            _aggregateProjection = aggregateProjection;
        }



        public override async System.Threading.Tasks.ValueTask<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate> BuildAsync(System.Collections.Generic.IReadOnlyList<Marten.Events.IEvent> events, Marten.IQuerySession session, Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate snapshot, System.Threading.CancellationToken cancellation)
        {
            if (!events.Any()) return null;
            Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate innerAggregate = null;
            snapshot ??= Create(events[0], session);
            foreach (var @event in events)
            {
                snapshot = await Apply(@event, snapshot, session, cancellation);
            }

            return snapshot;
        }


        public Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            return new Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate();
        }


        public async System.Threading.Tasks.ValueTask<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate> Apply(Marten.Events.IEvent @event, Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate aggregate, Marten.IQuerySession session, System.Threading.CancellationToken cancellation)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<Marten.Testing.Events.EventA> event_EventA1419:
                    aggregate.Apply(event_EventA1419.Data);
                    break;
                case Marten.Events.IEvent<Marten.Testing.Events.EventB> event_EventB1420:
                    aggregate.Apply(event_EventB1420);
                    break;
                case Marten.Events.IEvent<Marten.Testing.Events.EventC> event_EventC1421:
                    aggregate = aggregate.Apply(event_EventC1421);
                    break;
                case Marten.Events.IEvent<Marten.Testing.Events.EventD> event_EventD1422:
                    aggregate = await aggregate.Apply(event_EventD1422.Data, session);
                    break;
            }

            return aggregate;
        }

    }

    // END: AggregateProjectionLiveAggregation2068522983
    
    
    // START: AggregateProjectionInlineHandler2068522983
    public class AggregateProjectionInlineHandler2068522983 : Marten.Events.Aggregation.AggregationRuntime<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate, System.Guid>
    {
        private readonly Marten.IDocumentStore _store;
        private readonly Marten.Events.Aggregation.IAggregateProjection _projection;
        private readonly Marten.Events.Aggregation.IEventSlicer<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate, System.Guid> _slicer;
        private readonly Marten.Storage.ITenancy _tenancy;
        private readonly Marten.Internal.Storage.IDocumentStorage<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate, System.Guid> _storage;
        private readonly Marten.Events.Aggregation.AggregateProjection<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate> _aggregateProjection;

        public AggregateProjectionInlineHandler2068522983(Marten.IDocumentStore store, Marten.Events.Aggregation.IAggregateProjection projection, Marten.Events.Aggregation.IEventSlicer<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate, System.Guid> slicer, Marten.Storage.ITenancy tenancy, Marten.Internal.Storage.IDocumentStorage<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate, System.Guid> storage, Marten.Events.Aggregation.AggregateProjection<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate> aggregateProjection) : base(store, projection, slicer, tenancy, storage)
        {
            _store = store;
            _projection = projection;
            _slicer = slicer;
            _tenancy = tenancy;
            _storage = storage;
            _aggregateProjection = aggregateProjection;
        }



        public override async System.Threading.Tasks.ValueTask<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate> ApplyEvent(Marten.IQuerySession session, Marten.Events.Projections.EventSlice<Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate, System.Guid> slice, Marten.Events.IEvent evt, Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate aggregate, System.Threading.CancellationToken cancellationToken)
        {
            switch (evt)
            {
                case Marten.Events.IEvent<Marten.Testing.Events.EventA> event_EventA1423:
                    aggregate ??= new Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate();
                    aggregate.Apply(event_EventA1423.Data);
                    return aggregate;
                case Marten.Events.IEvent<Marten.Testing.Events.EventB> event_EventB1424:
                    aggregate ??= new Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate();
                    aggregate.Apply(event_EventB1424);
                    return aggregate;
                case Marten.Events.IEvent<Marten.Testing.Events.EventC> event_EventC1425:
                    aggregate ??= new Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate();
                    aggregate = aggregate.Apply(event_EventC1425);
                    return aggregate;
                case Marten.Events.IEvent<Marten.Testing.Events.EventD> event_EventD1426:
                    aggregate ??= new Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate();
                    aggregate = await aggregate.Apply(event_EventD1426.Data, session);
                    return aggregate;
            }

            return aggregate;
        }


        public Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            return new Marten.Testing.Events.Bugs.Bug_1679_use_inner_type_for_self_aggregate.InnerAggregate();
        }

    }

    // END: AggregateProjectionInlineHandler2068522983
    
    
}

