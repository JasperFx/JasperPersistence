// <auto-generated/>
#pragma warning disable
using Marten.Internal.CompiledQueries;
using Marten.Linq.QueryHandlers;
using Marten.Testing.Bugs;
using System;

namespace Marten.Generated.DocumentStorage
{
    // START: FlaggedFalseTargetsCompiledQuery234230862
    public class FlaggedFalseTargetsCompiledQuery234230862 : Marten.Internal.CompiledQueries.StatelessCompiledQuery<System.Collections.Generic.IEnumerable<Marten.Testing.Documents.Target>, Marten.Testing.Bugs.Bug_605_unary_expressions_in_where_clause_of_compiled_query.FlaggedFalseTargets>
    {
        private readonly Marten.Linq.QueryHandlers.IQueryHandler<System.Collections.Generic.IEnumerable<Marten.Testing.Documents.Target>> _inner;
        private readonly Marten.Testing.Bugs.Bug_605_unary_expressions_in_where_clause_of_compiled_query.FlaggedFalseTargets _query;
        private readonly Marten.Internal.CompiledQueries.HardCodedParameters _hardcoded;

        public FlaggedFalseTargetsCompiledQuery234230862(Marten.Linq.QueryHandlers.IQueryHandler<System.Collections.Generic.IEnumerable<Marten.Testing.Documents.Target>> inner, Marten.Testing.Bugs.Bug_605_unary_expressions_in_where_clause_of_compiled_query.FlaggedFalseTargets query, Marten.Internal.CompiledQueries.HardCodedParameters hardcoded) : base(inner, query, hardcoded)
        {
            _inner = inner;
            _query = query;
            _hardcoded = hardcoded;
        }



        public override void ConfigureCommand(Weasel.Postgresql.CommandBuilder builder, Marten.Internal.IMartenSession session)
        {
            var parameters = builder.AppendWithParameters(@"WITH mt_temp_id_list1CTE as (
            select jsonb_array_elements(CAST(d.data ->> 'Children' as jsonb)) as data from public.mt_doc_target as d
            )
             select d.data as data from mt_temp_id_list1CTE as d where (CAST(d.data ->> 'Color' as integer) = ? and  (d.data ->> 'Flag' is null or CAST(d.data ->> 'Flag' as boolean) = False)) order by CAST(d.data ->> 'Id' as uuid) OFFSET ? LIMIT ?");

            parameters[1].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Integer;
            parameters[1].Value = _query.Skip;

            parameters[2].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Integer;
            parameters[2].Value = _query.Take;
            _hardcoded.Apply(parameters);
        }

    }

    // END: FlaggedFalseTargetsCompiledQuery234230862
    
    
    // START: FlaggedFalseTargetsCompiledQuerySource234230862
    public class FlaggedFalseTargetsCompiledQuerySource234230862 : Marten.Internal.CompiledQueries.CompiledQuerySource<System.Collections.Generic.IEnumerable<Marten.Testing.Documents.Target>, Marten.Testing.Bugs.Bug_605_unary_expressions_in_where_clause_of_compiled_query.FlaggedFalseTargets>
    {
        private readonly Marten.Internal.CompiledQueries.HardCodedParameters _hardcoded;
        private readonly Marten.Linq.QueryHandlers.IQueryHandler<System.Collections.Generic.IEnumerable<Marten.Testing.Documents.Target>> _queryHandler;

        public FlaggedFalseTargetsCompiledQuerySource234230862(Marten.Internal.CompiledQueries.HardCodedParameters hardcoded, Marten.Linq.QueryHandlers.IQueryHandler<System.Collections.Generic.IEnumerable<Marten.Testing.Documents.Target>> queryHandler)
        {
            _hardcoded = hardcoded;
            _queryHandler = queryHandler;
        }



        public override Marten.Linq.QueryHandlers.IQueryHandler<System.Collections.Generic.IEnumerable<Marten.Testing.Documents.Target>> BuildHandler(Marten.Testing.Bugs.Bug_605_unary_expressions_in_where_clause_of_compiled_query.FlaggedFalseTargets query, Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.DocumentStorage.FlaggedFalseTargetsCompiledQuery234230862(_queryHandler, query, _hardcoded);
        }

    }

    // END: FlaggedFalseTargetsCompiledQuerySource234230862
    
    
}

