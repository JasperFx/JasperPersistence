// <auto-generated/>
#pragma warning disable
using Marten.Internal.CompiledQueries;
using Marten.Linq.QueryHandlers;
using Marten.Testing.Linq.Compiled;
using System;

namespace Marten.Generated.DocumentStorage
{
    // START: TestQueryCompiledQuery1477999824
    public class TestQueryCompiledQuery1477999824 : Marten.Internal.CompiledQueries.StatelessCompiledQuery<bool, Marten.Testing.Linq.Compiled.compiled_query_Tests.TestQuery>
    {
        private readonly Marten.Linq.QueryHandlers.IQueryHandler<bool> _inner;
        private readonly Marten.Testing.Linq.Compiled.compiled_query_Tests.TestQuery _query;
        private readonly Marten.Internal.CompiledQueries.HardCodedParameters _hardcoded;

        public TestQueryCompiledQuery1477999824(Marten.Linq.QueryHandlers.IQueryHandler<bool> inner, Marten.Testing.Linq.Compiled.compiled_query_Tests.TestQuery query, Marten.Internal.CompiledQueries.HardCodedParameters hardcoded) : base(inner, query, hardcoded)
        {
            _inner = inner;
            _query = query;
            _hardcoded = hardcoded;
        }



        public override void ConfigureCommand(Weasel.Postgresql.CommandBuilder builder, Marten.Internal.IMartenSession session)
        {
            var parameters = builder.AppendWithParameters(@"select TRUE as result from public.mt_doc_user as d where CAST(d.data ->> 'Age' as integer) = ? LIMIT ?");

            parameters[0].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Integer;
            parameters[0].Value = _query.Age;
            _hardcoded.Apply(parameters);
        }

    }

    // END: TestQueryCompiledQuery1477999824
    
    
    // START: TestQueryCompiledQuerySource1477999824
    public class TestQueryCompiledQuerySource1477999824 : Marten.Internal.CompiledQueries.CompiledQuerySource<bool, Marten.Testing.Linq.Compiled.compiled_query_Tests.TestQuery>
    {
        private readonly Marten.Internal.CompiledQueries.HardCodedParameters _hardcoded;
        private readonly Marten.Linq.QueryHandlers.IQueryHandler<bool> _queryHandler;

        public TestQueryCompiledQuerySource1477999824(Marten.Internal.CompiledQueries.HardCodedParameters hardcoded, Marten.Linq.QueryHandlers.IQueryHandler<bool> queryHandler)
        {
            _hardcoded = hardcoded;
            _queryHandler = queryHandler;
        }



        public override Marten.Linq.QueryHandlers.IQueryHandler<bool> BuildHandler(Marten.Testing.Linq.Compiled.compiled_query_Tests.TestQuery query, Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.DocumentStorage.TestQueryCompiledQuery1477999824(_queryHandler, query, _hardcoded);
        }

    }

    // END: TestQueryCompiledQuerySource1477999824
    
    
}

