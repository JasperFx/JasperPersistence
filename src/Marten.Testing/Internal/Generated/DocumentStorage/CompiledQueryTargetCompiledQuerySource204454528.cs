// <auto-generated/>
#pragma warning disable
using Marten.Internal.CompiledQueries;
using Marten.Linq;
using Marten.Linq.QueryHandlers;
using Marten.Testing.Linq;
using System;

namespace Marten.Generated.DocumentStorage
{
    // START: CompiledQueryTargetCompiledQuery204454528
    public class CompiledQueryTargetCompiledQuery204454528 : Marten.Internal.CompiledQueries.ClonedCompiledQuery<Marten.Testing.Linq.SimpleEqualsParserTests.QueryTarget, Marten.Testing.Linq.SimpleEqualsParserTests.CompiledQueryTarget>
    {
        private readonly Marten.Linq.QueryHandlers.IMaybeStatefulHandler _inner;
        private readonly Marten.Testing.Linq.SimpleEqualsParserTests.CompiledQueryTarget _query;
        private readonly Marten.Linq.QueryStatistics _statistics;
        private readonly Marten.Internal.CompiledQueries.HardCodedParameters _hardcoded;

        public CompiledQueryTargetCompiledQuery204454528(Marten.Linq.QueryHandlers.IMaybeStatefulHandler inner, Marten.Testing.Linq.SimpleEqualsParserTests.CompiledQueryTarget query, Marten.Linq.QueryStatistics statistics, Marten.Internal.CompiledQueries.HardCodedParameters hardcoded) : base(inner, query, statistics, hardcoded)
        {
            _inner = inner;
            _query = query;
            _statistics = statistics;
            _hardcoded = hardcoded;
        }



        public override void ConfigureCommand(Weasel.Postgresql.CommandBuilder builder, Marten.Internal.IMartenSession session)
        {
            var parameters = builder.AppendWithParameters(@"select d.id, d.data from public.mt_doc_simpleequalsparsertests_querytarget as d where (CAST(d.data ->> 'IntProp' as integer) = ? and d.id = ?) LIMIT ?");

            parameters[1].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Uuid;
            parameters[1].Value = _query.IdProp;

            parameters[0].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Integer;
            parameters[0].Value = _query.IntProp;

            parameters[2].NpgsqlDbType = NpgsqlTypes.NpgsqlDbType.Integer;
            parameters[2].Value = _query.IntProp;
        }

    }

    // END: CompiledQueryTargetCompiledQuery204454528
    
    
    // START: CompiledQueryTargetCompiledQuerySource204454528
    public class CompiledQueryTargetCompiledQuerySource204454528 : Marten.Internal.CompiledQueries.CompiledQuerySource<Marten.Testing.Linq.SimpleEqualsParserTests.QueryTarget, Marten.Testing.Linq.SimpleEqualsParserTests.CompiledQueryTarget>
    {
        private readonly Marten.Internal.CompiledQueries.HardCodedParameters _hardcoded;
        private readonly Marten.Linq.QueryHandlers.IMaybeStatefulHandler _maybeStatefulHandler;

        public CompiledQueryTargetCompiledQuerySource204454528(Marten.Internal.CompiledQueries.HardCodedParameters hardcoded, Marten.Linq.QueryHandlers.IMaybeStatefulHandler maybeStatefulHandler)
        {
            _hardcoded = hardcoded;
            _maybeStatefulHandler = maybeStatefulHandler;
        }



        public override Marten.Linq.QueryHandlers.IQueryHandler<Marten.Testing.Linq.SimpleEqualsParserTests.QueryTarget> BuildHandler(Marten.Testing.Linq.SimpleEqualsParserTests.CompiledQueryTarget query, Marten.Internal.IMartenSession session)
        {
            return new Marten.Generated.DocumentStorage.CompiledQueryTargetCompiledQuery204454528(_maybeStatefulHandler, query, null, _hardcoded);
        }

    }

    // END: CompiledQueryTargetCompiledQuerySource204454528
    
    
}

